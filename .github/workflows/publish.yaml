name: docker_publish

on:
  push:
    branches:
      - "main"
      - "v0.3.x"
    tags:
      - "*"

jobs:
  lint_test:
    uses: babylonlabs-io/.github/.github/workflows/reusable_node_lint_test.yml@v0.3.0
    with:
      run-build: true
      run-unit-tests: true

  docker_build:
    needs: [lint_test]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        environment:
          [
            devnet,
            phase-2-devnet,
            staging,
            testnet,
            phase-2-testnet,
            mainnet-private,
            phase-2-private-mainnet,
            mainnet,
            phase-2-mainnet,
            mock-mainnet,
          ]
    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          tags: simple-staking:${{ github.sha }}
          outputs: type=docker,dest=/tmp/simple-staking-${{ matrix.environment }}.tar
          file: ./docker/Dockerfile
          build-args: |
            NEXT_PUBLIC_MEMPOOL_API=${{ vars.NEXT_PUBLIC_MEMPOOL_API }}
            NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }}
            NEXT_PUBLIC_NETWORK=${{ vars.NEXT_PUBLIC_NETWORK }}
            NEXT_PUBLIC_DISPLAY_TESTING_MESSAGES=${{ vars.NEXT_PUBLIC_DISPLAY_TESTING_MESSAGES }}
            NEXT_PUBLIC_SENTRY_DSN=${{ vars.NEXT_PUBLIC_SENTRY_DSN }}
            NEXT_PUBLIC_FIXED_STAKING_TERM=${{ vars.NEXT_PUBLIC_FIXED_STAKING_TERM }}
            NEXT_PUBLIC_COMMIT_HASH=${{ github.sha }}
            NEXT_PUBLIC_BBN_GAS_PRICE=${{ vars.NEXT_PUBLIC_BBN_GAS_PRICE }}
            NEXT_PUBLIC_SIDECAR_API_URL=${{ vars.NEXT_PUBLIC_SIDECAR_API_URL }}
      - name: Upload Docker image to workspace
        uses: actions/upload-artifact@v4
        with:
          name: simple-staking-${{ matrix.environment }}
          path: /tmp/simple-staking-${{ matrix.environment }}.tar

  dockerhub_publish:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        environment:
          [
            devnet,
            phase-2-devnet,
            staging,
            testnet,
            phase-2-testnet,
            mainnet-private,
            phase-2-private-mainnet,
            mainnet,
            phase-2-mainnet,
            mock-mainnet,
          ]
    needs: ["docker_build"]
    steps:
      - name: Download Docker image from workspace
        uses: actions/download-artifact@v4
        with:
          name: simple-staking-${{ matrix.environment }}
          path: /tmp/

      - name: Load Docker image
        run: docker load -i /tmp/simple-staking-${{ matrix.environment }}.tar

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image with SHA
        run: |
          docker tag simple-staking:${{ github.sha }} ${{ vars.DOCKERHUB_REGISTRY_ID }}/simple-staking:${{ github.sha }}-${{ matrix.environment }}
          docker push ${{ vars.DOCKERHUB_REGISTRY_ID }}/simple-staking:${{ github.sha }}-${{ matrix.environment }}

      - name: Push Docker image with Tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          docker tag simple-staking:${{ github.sha }} ${{ vars.DOCKERHUB_REGISTRY_ID }}/simple-staking:${{ github.ref_name }}-${{ matrix.environment }}
          docker push ${{ vars.DOCKERHUB_REGISTRY_ID }}/simple-staking:${{ github.ref_name }}-${{ matrix.environment }}

  ecr_publish:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        environment:
          [
            devnet,
            phase-2-devnet,
            staging,
            testnet,
            phase-2-testnet,
            mainnet-private,
            phase-2-private-mainnet,
            mainnet,
            phase-2-mainnet,
            mock-mainnet,
          ]
    needs: ["docker_build"]
    steps:
      - name: Download Docker image from workspace
        uses: actions/download-artifact@v4
        with:
          name: simple-staking-${{ matrix.environment }}
          path: /tmp/

      - name: Load Docker image
        run: docker load -i /tmp/simple-staking-${{ matrix.environment }}.tar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_ECR_REGION }}

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker image with SHA
        run: |
          docker tag simple-staking:${{ github.sha }} ${{ vars.AWS_ECR_REGISTRY_ID }}/simple-staking:${{ github.sha }}-${{ matrix.environment }}
          docker push ${{ vars.AWS_ECR_REGISTRY_ID }}/simple-staking:${{ github.sha }}-${{ matrix.environment }}

      - name: Push Docker image with Tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          docker tag simple-staking:${{ github.sha }} ${{ vars.AWS_ECR_REGISTRY_ID }}/simple-staking:${{ github.ref_name }}-${{ matrix.environment }}
          docker push ${{ vars.AWS_ECR_REGISTRY_ID }}/simple-staking:${{ github.ref_name }}-${{ matrix.environment }}

  s3_publish:
    needs: [lint_test]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        environment:
          [
            devnet,
            phase-2-devnet,
            testnet,
            phase-2-testnet,
            mainnet-private,
            phase-2-private-mainnet,
            mainnet,
            phase-2-mainnet,
            mock-mainnet,
          ]
    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build
        env:
          NEXT_PUBLIC_MEMPOOL_API: ${{ vars.NEXT_PUBLIC_MEMPOOL_API }}
          NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_NETWORK: ${{ vars.NEXT_PUBLIC_NETWORK }}
          NEXT_PUBLIC_DISPLAY_TESTING_MESSAGES: ${{ vars.NEXT_PUBLIC_DISPLAY_TESTING_MESSAGES }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ vars.NEXT_PUBLIC_SENTRY_DSN }}
          NEXT_PUBLIC_FIXED_STAKING_TERM: ${{ vars.NEXT_PUBLIC_FIXED_STAKING_TERM }}
          NEXT_PUBLIC_COMMIT_HASH: ${{ github.sha }}
          NEXT_PUBLIC_BBN_GAS_PRICE: ${{ vars.NEXT_PUBLIC_BBN_GAS_PRICE }}
          NEXT_PUBLIC_SIDECAR_API_URL: ${{ vars.NEXT_PUBLIC_SIDECAR_API_URL }}
          S3_PUBLIC_BUCKET: ${{ vars.S3_PUBLIC_BUCKET }}

      - name: Archive output
        run: tar -czvf /tmp/simple-staking-${{ matrix.environment }}-${{ github.sha }}.tar.gz -C out .

      - name: Upload to S3 with commit sha
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_S3_REGION }}
        run: aws s3 cp /tmp/simple-staking-${{ matrix.environment }}-${{ github.sha }}.tar.gz s3://${{ vars.S3_PUBLIC_BUCKET }}/${{ matrix.environment }}/simple-staking-${{ github.sha }}.tar.gz

      - name: Upload to S3 with Git Tag
        if: startsWith(github.ref, 'refs/tags/')
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_S3_REGION }}
        run: aws s3 cp /tmp/simple-staking-${{ matrix.environment }}-${{ github.sha }}.tar.gz s3://${{ vars.S3_PUBLIC_BUCKET }}/${{ matrix.environment }}/simple-staking-${{ github.ref_name }}.tar.gz
