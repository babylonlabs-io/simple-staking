name: docker_publish

on:
  push:
    branches:
      - "main"
      - "release/v1.x"
    tags:
      - "*"

jobs:
  lint_test:
    uses: babylonlabs-io/.github/.github/workflows/reusable_node_lint_test.yml@v0.3.0
    with:
      run-build: true
      run-unit-tests: true

  s3_publish:
    needs: [lint_test]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        environment:
          [
            devnet,
            phase-2-devnet,
            testnet,
            phase-2-testnet,
            mainnet-private,
            phase-2-private-mainnet,
            mainnet,
            phase-2-mainnet,
            mock-mainnet,
          ]
    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build
        env:
          VITE_MEMPOOL_API: ${{ vars.VITE_MEMPOOL_API }}
          VITE_API_URL: ${{ vars.VITE_API_URL }}
          VITE_NETWORK: ${{ vars.VITE_NETWORK }}
          VITE_DISPLAY_TESTING_MESSAGES: ${{ vars.VITE_DISPLAY_TESTING_MESSAGES }}
          VITE_SENTRY_DSN: ${{ vars.VITE_SENTRY_DSN }}
          VITE_FIXED_STAKING_TERM: ${{ vars.VITE_FIXED_STAKING_TERM }}
          VITE_COMMIT_HASH: ${{ github.sha }}
          VITE_BBN_GAS_PRICE: ${{ vars.VITE_BBN_GAS_PRICE }}
          VITE_SIDECAR_API_URL: ${{ vars.VITE_SIDECAR_API_URL }}
          VITE_BABYLON_EXPLORER: ${{ vars.VITE_BABYLON_EXPLORER }}
          VITE_REPLAYS_RATE: ${{ vars.VITE_REPLAYS_RATE }}
          VITE_STAKING_DISABLED: ${{ vars.VITE_STAKING_DISABLED}}
          VITE_DISABLED_WALLETS: ${{ vars.VITE_DISABLED_WALLETS }}
          S3_PUBLIC_BUCKET: ${{ vars.S3_PUBLIC_BUCKET }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_URL: ${{ vars.SENTRY_URL }}
          SENTRY_RELEASE: ${{ github.sha }}
          SENTRY_DIST: ${{ github.run_id }}
          SENTRY_ENVIRONMENT: ${{ matrix.environment }}
          VITE_RELEASE_ID: ${{ github.sha }}
          VITE_DIST_ID: ${{ github.run_id }}
          VITE_SENTRY_ENVIRONMENT: ${{ matrix.environment }}

      - name: Archive output
        run: tar -czvf /tmp/simple-staking-${{ matrix.environment }}-${{ github.sha }}.tar.gz -C out .

      - name: Upload to S3 with commit sha
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_S3_REGION }}
        run: aws s3 cp /tmp/simple-staking-${{ matrix.environment }}-${{ github.sha }}.tar.gz s3://${{ vars.S3_PUBLIC_BUCKET }}/simple-staking/${{ matrix.environment }}/${{ github.sha }}.tar.gz

      - name: Upload to S3 with Git Tag
        if: startsWith(github.ref, 'refs/tags/')
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_S3_REGION }}
        run: aws s3 cp /tmp/simple-staking-${{ matrix.environment }}-${{ github.sha }}.tar.gz s3://${{ vars.S3_PUBLIC_BUCKET }}/simple-staking/${{ matrix.environment }}/${{ github.ref_name }}.tar.gz
